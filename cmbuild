#!/bin/ksh
#
# SPDX-License-Identifier: CDDL-1.0
#
# {{{ CDDL HEADER
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source. A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# }}}
#
# Copyright 2024 Peter Tribble
#

#
# fix environment
#
LC_ALL=C
export LC_ALL
TZ=UTC
export TZ

#
# build some software
#
# assumes cmake, currently somewhat limited compared to the autoconf
# style of build
#

THOME=${THOME:-/packages/localsrc/Tribblix}
BUILD="${THOME}/build"
GMAKE="/usr/bin/gmake"
WORKING_ROOT=`pwd`

case $# in
    0)
	echo "Usage: $0 [-64|+64|-64only|+64only] [-gnu] src_name \\"
        echo "  [-B build_dir] [-P alt_prefix] [-C configure_args] \\"
	echo "  [-M make_args] [-J parallelism] [-L]"
	exit 1
	;;
esac

#
# sanity check
#
if [ ! -x /usr/bin/cmake ]; then
    echo "ERROR: cmake not installed"
    exit 1
fi
if [ ! -x ${GMAKE} ]; then
    echo "ERROR: gmake not installed"
    exit 1
fi

#
# sanity check to avoid messing up a repo
#
if [ -d .git ]; then
    echo "ERROR: cannot run in a git repo"
    exit 1
fi
     
#
# if a dual 32- and 64-bit build is desired, specify -64 *first*
# +64 means just do the 64-bit (useful for testing it in isolation)
# note that +64 will wipe the 32-bit directory
# +32 means just do the 32-bit
# note that +32 will NOT wipe the 64-bit directory
# -64only means put the 64-bit binaries in the default path
# +64only means put all 64-bit objects in the
# default path, rather than in a subdirectory
#
DO32="true"
DO64="false"
ONLY64="false"
ONLY64BIN="false"
UNPACK_FLAGS=""
BRANCHARGS=""
BUILDDIR="tribblix_build"

#
# if /usr/gnu/bin is needed at the head of the PATH (often, to find
# GNU gettext) then specify -gnu to add for configuration, and specify
# +gnu to force for both configuration and build
#
CONFGNU="false"
BUILDGNU="false"

#
# Other arguments are
# package name
# -S subdir
# -P alternate_prefix
# -C configure_args
# +C configure_args [64-bit]
# -M make_args
# -J parallelism
# -L disable LD_OPTIONS
# -B subdirectory to use rather than the default
# +B run cmake directly in the source tree, not in a build subdir
# -b branch for git checkout
# -n wrong name of dir that tarball unpacks into
#
IPREFIX="/usr"
CONFARGS32=""
CONFARGS64=""
MAKEARGS=""
GMAKEFLAGS="-j 4"
SUBDIR=""
DO_LD="yes"
BFLAG="yes"
BDIR=".."

while [[ $# -gt 0 ]]; do
case $1 in
+32)
	UNPACK_FLAGS="+32"
	shift
	;;
-64)
	DO64="true"
	UNPACK_FLAGS="-64"
	shift
	;;
+64)
	DO64="true"
	DO32="false"
	UNPACK_FLAGS="+64"
	shift
	;;
-64only)
	DO64="true"
	DO32="false"
	ONLY64BIN="true"
	UNPACK_FLAGS="+64"
	shift
	;;
+64only)
	DO64="true"
	DO32="false"
	ONLY64="true"
	ONLY64BIN="true"
	UNPACK_FLAGS="+64"
	shift
	;;
-gnu)
	CONFGNU="true"
	shift
	;;
+gnu)
	CONFGNU="true"
	BUILDGNU="true"
	shift
	;;
-P)
	shift
	IPREFIX="$1"
	shift
	;;
-C)
	shift
	CONFARGS32="$1"
	shift
	;;
+C)
	shift
	CONFARGS64="$1"
	shift
	;;
-M)
	shift
	MAKEARGS="$1"
	shift
	;;
-J)
	shift
	GMAKEFLAGS="-j $1"
	shift
	;;
-L)
	shift
	DO_LD=""
	;;
-B)
	shift
	BUILDDIR="$1"
	shift
	;;
+B)
	shift
	BFLAG=""
	BDIR="."
	;;
-S)
	shift
	TSUBDIR="$1"
	SUBDIR="/$1"
	shift
	;;
-b)
	shift
	BRANCHARGS="-b $1"
	shift
	;;
-n)
	shift
	UNPACK_FLAGS="${UNPACK_FLAGS} -n $1"
	shift
	;;
-*)
	echo "Invalid argument $1"
	exit 1
	;;
*)
	THISPKG="$THISPKG $1"
	shift
	;;
esac
done

#
# if we don't have specific 64-bit configure args,
# then use the 32-bit ones
#
if [[ -z $CONFARGS64 ]]; then
    CONFARGS64="$CONFARGS32"
fi

#
# 64-bit files go in these subdirectories
#
case `uname -p` in
sparc)
    ARCH64="sparcv9"
    ;;
i386)
    ARCH64="amd64"
    ;;
esac
BINDIR32="bin"
BINDIR64="bin/${ARCH64}"
if [ "x${ONLY64BIN}" != "xfalse" ]; then
    BINDIR64="bin"
fi
LIBDIR32="lib"
LIBDIR64="lib/${ARCH64}"
if [ "x${ONLY64}" != "xfalse" ]; then
    LIBDIR64="lib"
fi

#
# default linker options
#
if [[ -n $DO_LD ]]; then
case `uname -p` in
sparc)
    LD_OPTIONS="-M /usr/lib/ld/map.noexbss -M /usr/lib/ld/map.noexstk -M /usr/lib/ld/map.pagealign -Bdirect -z ignore"
    ;;
i386)
    LD_OPTIONS="-M /usr/lib/ld/map.noexdata -M /usr/lib/ld/map.noexstk -M /usr/lib/ld/map.pagealign -Bdirect -z ignore"
    ;;
esac
export LD_OPTIONS
fi

#
# set the PATH we'll use later
#
if [ "x$CONFGNU" != "xfalse" ]; then
    TRIBBLIX_CONF_PATH64=/usr/gnu/bin/${ARCH64}:/usr/gnu/bin:/usr/bin/${ARCH64}:$PATH
    TRIBBLIX_CONF_PATH32=/usr/gnu/bin:$PATH
else
    TRIBBLIX_CONF_PATH64=/usr/bin/${ARCH64}:${PATH/\/usr\/gnu\/bin//usr/gnu/bin/${ARCH64}:/usr/gnu/bin}
    TRIBBLIX_CONF_PATH32=$PATH
fi
if [ "x$BUILDGNU" != "xfalse" ]; then
    TRIBBLIX_BUILD_PATH32=/usr/gnu/bin:$PATH
    TRIBBLIX_BUILD_PATH64=/usr/gnu/bin/${ARCH64}:/usr/gnu/bin:$PATH
else
    TRIBBLIX_BUILD_PATH32=$PATH
    TRIBBLIX_BUILD_PATH64=$PATH
fi

#
# if we want to add something to PKG_CONFIG_PATH
# then tack a : on the end so the command we construct
# looks like a : separated list
#
if [ -n "${TRIBBLIX_PKG_CONFIG_PATH}" ]; then
    TRIBBLIX_PKG_CONFIG_PATH="${TRIBBLIX_PKG_CONFIG_PATH}:"
fi

UNPACKER=${BUILD}/unpack
export UNPACKER
PATCHDIR=${BUILD}/patches
export PATCHDIR
for pkg in ${THISPKG}
do
	${UNPACKER} ${UNPACK_FLAGS} ${BRANCHARGS} ${pkg}
	case $pkg in
	    https://*)
		pkg=${pkg##*/}
		pkg=${pkg%.git}
		;;
	esac
	if [ "x$DO64" != "xfalse" ]; then
	    cd ${WORKING_ROOT}
	    if [ ! -d ${pkg}-64bit ]; then
		echo "Cannot find source directory ${pkg}-64bit"
		exit 1
	    fi
	    if [[ -n $DO_LD ]]; then
		cd ${pkg}-64bit
		touch .tribblix_ldopts
		cat >> .tribblix_ldopts <<EOF
LD_OPTIONS="${LD_OPTIONS}"
export LD_OPTIONS
EOF
		cd ${WORKING_ROOT}
	    fi
	    if [[ -n $SUBDIR ]]; then
		cd ${pkg}-64bit
		echo "${TSUBDIR}" > .tribblix_build_subdir
		cd ${WORKING_ROOT}
	    fi
	    cd ${pkg}-64bit${SUBDIR}
	    if [ -x "${BUILD}/patches/${pkg}.preconf.64" ]; then
		${BUILD}/patches/${pkg}.preconf.64
	    elif [ -x "${BUILD}/patches/${pkg}.preconf" ]; then
		${BUILD}/patches/${pkg}.preconf
	    fi
	    if [[ -n $BFLAG ]]; then
		echo "${BUILDDIR}" > .tribblix_cmake_build
		mkdir ${BUILDDIR}
		cd ${BUILDDIR}
	    fi
	    env PKG_CONFIG_PATH=${TRIBBLIX_PKG_CONFIG_PATH}/usr/lib/${ARCH64}/pkgconfig PATH=$TRIBBLIX_CONF_PATH64 LDFLAGS="-m64 ${TRIBBLIX_LDFLAGS}" CFLAGS="-m64 ${TRIBBLIX_CFLAGS}" CXXFLAGS="-m64 ${TRIBBLIX_CXXFLAGS}" cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=${IPREFIX} -DLIB_INSTALL_DIR=${IPREFIX}/${LIBDIR64} -DBIN_INSTALL_DIR=${IPREFIX}/${BINDIR64} -DCMAKE_INSTALL_LIBDIR=${IPREFIX}/${LIBDIR64} -DCMAKE_INSTALL_BINDIR=${IPREFIX}/${BINDIR64} ${CONFARGS64} $BDIR
	    if [ -x "${BUILD}/patches/${pkg}.postconf.64" ]; then
		${BUILD}/patches/${pkg}.postconf.64
	    elif [ -x "${BUILD}/patches/${pkg}.postconf" ]; then
		${BUILD}/patches/${pkg}.postconf
	    fi
	    env PATH=$TRIBBLIX_BUILD_PATH64 ${GMAKE} ${GMAKEFLAGS} ${MAKEARGS}
	    if [[ -n $BFLAG ]]; then
		cd ..
	    fi
	fi
	if [ "x$DO32" != "xfalse" ]; then
	    cd ${WORKING_ROOT}
	    if [ ! -d ${pkg} ]; then
		echo "Cannot find source directory ${pkg}"
		exit 1
	    fi
	    if [[ -n $DO_LD ]]; then
		cd ${pkg}
		touch .tribblix_ldopts
		cat >> .tribblix_ldopts <<EOF
LD_OPTIONS="${LD_OPTIONS}"
export LD_OPTIONS
EOF
		cd ${WORKING_ROOT}
	    fi
	    if [[ -n $SUBDIR ]]; then
		cd ${pkg}
		echo "${TSUBDIR}" > .tribblix_build_subdir
		cd ${WORKING_ROOT}
	    fi
	    cd ${pkg}${SUBDIR}
	    if [ -x "${BUILD}/patches/${pkg}.preconf" ]; then
		${BUILD}/patches/${pkg}.preconf
	    fi
	    if [[ -n $BFLAG ]]; then
		echo "${BUILDDIR}" > .tribblix_cmake_build
		mkdir ${BUILDDIR}
		cd ${BUILDDIR}
	    fi
	    env PKG_CONFIG_PATH=${TRIBBLIX_PKG_CONFIG_PATH}/usr/lib/pkgconfig PATH=$TRIBBLIX_CONF_PATH32 LDFLAGS="-m32 ${TRIBBLIX_LDFLAGS}" CFLAGS="-m32 ${TRIBBLIX_CFLAGS}" CXXFLAGS="-m32 ${TRIBBLIX_CXXFLAGS}" cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=${IPREFIX} -DLIB_INSTALL_DIR=${IPREFIX}/${LIBDIR32} -DBIN_INSTALL_DIR=${IPREFIX}/${BINDIR32} -DCMAKE_INSTALL_LIBDIR=${IPREFIX}/${LIBDIR32} -DCMAKE_INSTALL_BINDIR=${IPREFIX}/${BINDIR32} ${CONFARGS32} $BDIR
	    if [ -x "${BUILD}/patches/${pkg}.postconf" ]; then
		${BUILD}/patches/${pkg}.postconf
	    fi
	    env PATH=$TRIBBLIX_BUILD_PATH32 ${GMAKE} ${GMAKEFLAGS} ${MAKEARGS}
	    if [[ -n $BFLAG ]]; then
		cd ..
	    fi
	fi
done
