#!/bin/sh
#
# package one or more python project(s) that use the new pep518 style, rather
# than the old setup.py mechanism
#

case $1 in
    -v)
	SPYVER=$2
	shift
	shift
	;;
esac

case $# in
0|1)
	echo "Usage: $0 pkg_name tar_file"
	exit 1
	;;
*)
	PKGNAME="$1"
	shift
	;;
esac

#
# Default locations
#
THOME=${THOME:-/packages/localsrc/Tribblix}
BUILD="${THOME}/build"
BROOT="/tmp/pct"

#
# verify that our arguments refer to a package and to a wheel
#
if [ ! -d $BUILD ]; then
   echo "ERROR: unable to find build directory $BUILD"
   exit 1
fi
if [ ! -f ${BUILD}/${PKGNAME}/pkginfo ]; then
   echo "ERROR: missing package data"
   echo "Please create ${BUILD}/${PKGNAME}/pkginfo"
   exit 1
fi
     
if [ ! -d $BROOT ]; then
    mkdir -p $BROOT
fi
if [ ! -d $BROOT ]; then
   echo "ERROR: unable to find temporary directory $BROOT"
   exit 1
fi

#
# derive the python version from the package name, if we weren't given it
#
if [ -z "$SPYVER" ]; then
    SPYVER=${PKGNAME##*-}
fi
#
# we assume it has to be 3.X
#
case $SPYVER in
    37)
	PYVER=3.7
	;;
    39)
	PYVER=3.9
	;;
    311)
	PYVER=3.11
	;;
    312)
	PYVER=3.12
	;;
    *)
	echo "Unrecognised python version $SPYVER"
	exit 1
	;;
esac

echo $PYVER

#
# define and create working location
#
BDIR="${BROOT}/pkg.$$"
rm -fr ${BDIR}

#
# loop over arguments
#
for PFILE in $*
do
#
# unpack
#
${BUILD}/unpack $PFILE
if [ ! -d "${PFILE}" ]; then
    echo "Missing source directory $PFILE"
    exit 1
fi
cd $PFILE
if [ ! -f pyproject.toml ]; then
    echo "No pyproject.toml, is this really a pep518 project?"
    exit 1
fi
#
# use pip to install
#
python${PYVER} -mpip install --no-deps --isolated --no-input --exists-action=a --disable-pip-version-check --no-warn-script-location --compile --root=${BDIR} -I .
cd ..
#
# end loop
#
done

${BUILD}/create_pkg ${PKGNAME} ${BDIR} ${BROOT}
cd /

# remove our temporary files
rm -fr ${BDIR}
