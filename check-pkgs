#!/bin/ksh
#
# SPDX-License-Identifier: CDDL-1.0
#
# {{{ CDDL HEADER
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source. A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# }}}
#
# Copyright 2024 Peter Tribble
#

#
# check to see if all the packages from the build directory
# are present
#
# -p arch - specify architecture to check
# -q - quiet, don't show good packages
# -Q - really quiet, only show summary total
#
DOFOUND="echo"
DOMISSING="echo"
ARCH=$(uname -p)
while getopts ":p:qQ" opt; do
    case $opt in
    p)
        ARCH="$OPTARG"
        ;;
    q)
        DOFOUND="true"
        ;;
    Q)
        DOFOUND="true"
        DOMISSING="true"
        ;;
    *)
        echo "ERROR: invalid option $OPTARG"
        exit 1
        ;;
    esac
done
shift $((OPTIND-1))

case $ARCH in
    i386)
	PKGDIR="../pkgs"
	;;
    sparc)
	PKGDIR="../pkgs.sparc"
	;;
    *)
	echo "ERROR: Unknown platform"
	exit 1
	;;
esac

NFOUND=0
NMISSING=0

for PKGI in */pkginfo
do
  PKG=${PKGI%/*}
  # if marked for a different arch, ignore
  if [ -f "${PKG}/arch.txt" ]; then
      NARCH=$(grep -x "$ARCH" "${PKG}/arch.txt")
      if [ -z "$NARCH" ]; then
	  continue
      fi
  fi
  # use a per-arch version if present
  if [ -f "${PKG}/version.$ARCH" ]; then
      PKGVERS=$(<"${PKG}/version.$ARCH")
  else
      PKGVERS=""
      while read -r line
      do
	  case $line in
	      VERSION=*)
		  PKGVERS=${line#*=}
		  break
		  ;;
	  esac
      done<"${PKGI}"
      PKGVERS=${PKGVERS//\"/}
  fi
  if [ -f "${PKGDIR}/${PKG}.${PKGVERS}.zap" ]; then
      $DOFOUND "FOUND ${PKG} at version ${PKGVERS}"
      NFOUND=$((NFOUND+1))
  else
      $DOMISSING "MISSING ${PKG} at version ${PKGVERS}"
      NMISSING=$((NMISSING+1))
  fi
done

echo "Totals - found ${NFOUND}, missing ${NMISSING}"
