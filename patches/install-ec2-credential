#!/bin/bash
#
# This script finds the ssh key associated with the instance and installs it
# if necessary. Gets run once at boot by smf(7)
#
# This is a hardened version of the OmniTI original, with extra checks
# and retries
#

. /lib/svc/share/smf_include.sh

#
# we really don't want this in a non-global zone, just exit cleanly
# after trying to disable ourself
#
if smf_is_nonglobalzone; then
    /usr/sbin/svcadm disable $SMF_FMRI
    exit $SMF_EXIT_OK
fi

# Emit a message upon failure
bail() {
    echo "ERROR: $@"
    exit $SMF_EXIT_ERR_FATAL
}

if [ ! -d /root/.ssh ] ; then
    mkdir -p -m 0700 /root/.ssh || bail "Could not create /root/.ssh directory"
fi

# Fetch public key using HTTP
MYKEY=$(/usr/bin/curl -s http://169.254.169.254/latest//meta-data/public-keys/0/openssh-key)

#
# if it comes back empty, retry
# if it's not a valid key, retry
#
while [ -z "${MYKEY}" ] ; do
    sleep 2
    MYKEY=$(/usr/bin/curl -s http://169.254.169.254/latest//meta-data/public-keys/0/openssh-key)
    if [ "${MYKEY:0:3}" != "ssh" ] ; then
	echo "Problem fetching openssh-key, try again"
	MYKEY=""
    fi
done

/usr/bin/ggrep -q "$MYKEY" /root/.ssh/authorized_keys 2>/dev/null && exit $SMF_EXIT_OK

echo "$MYKEY" >> /root/.ssh/authorized_keys
chmod 600 /root/.ssh/authorized_keys || bail "Could not set permissions on authorized_keys file"
exit $SMF_EXIT_OK
