--- a/image/png.c	Mon Mar 29 03:23:46 1999
+++ b/image/png.c	Fri Oct  2 12:27:40 2020
@@ -126,7 +126,7 @@
 
             val = 0;
             for (i = 0; i < info->num_trans; ++i) {
-                if (info->trans[i] < info->trans[val])
+                if (info->trans_alpha[i] < info->trans_alpha[val])
                     val = i;
             }
             png->image->transparent = val;
@@ -154,7 +154,7 @@
         png->image->rgb.used = maxval + 1;
 
         if (info->valid & PNG_INFO_tRNS)
-            png->image->transparent = info->trans_values.gray;
+            png->image->transparent = info->trans_color.gray;
     } else {
         png->image = newTrueImage(info->width, info->height);
        if (!png->image) {
@@ -223,7 +223,7 @@
         return;
 
     if (png->state) {
-        png_read_destroy(png->state, png->info, (png_info *) 0);
+        png_destroy_read_struct(&(png->state), &(png->info), NULL);
         free_mem(png->state);
         png->state = 0;
     }
@@ -286,7 +286,7 @@
     }
 
     if (setjmp(png->state->jmpbuf)) {
-        png_read_destroy(png->state, png->info, (png_info *) 0);
+        png_destroy_read_struct(&(png->state), &(png->info), NULL);
         free_mem(png->state);
         free_mem(png->info);
         png->state = 0;
@@ -293,10 +293,13 @@
         png->info = 0;
         return;
     }
+    /*
+    png_create_info_struct(png->info);
+    png_create_read_struct(png->state);
+    */
+    png->state = png_create_read_struct(PNG_LIBPNG_VER_STRING, NULL, NULL, NULL);
+    png->info = png_create_info_struct(png->state);
 
-    png_info_init(png->info);
-    png_read_init(png->state);
-
     png_set_progressive_read_fn(png->state, (void *) png, lf_info_callback,
         lf_row_callback, lf_end_callback);
     png->done = image_need_data;
