#!/bin/sh
#
# SPDX-License-Identifier: CDDL-1.0
#
# {{{ CDDL HEADER
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source. A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# }}}
#
# Copyright 2024 Peter Tribble
#

#
# checks to see if the claimed dependencies of a package
# are installed, and shows them
#
# also looks for build dependencies and incompatibilities
#
# with -q, prints nothing, exits 0 if they are, 1 if they aren't
#
# is unreliable on sparc where package names from opensxce are different
#

THOME=${THOME:-/packages/localsrc/Tribblix}
BDIR=${THOME}/build
PDIR="/var/sadm/pkg"

QUIET=""
STATUS=0

if [ "X$1" = "X-q" ]; then
    QUIET="yes"
    shift
fi

ARCH=$(uname -p)

#
# if no arguments, shortcut for the package I'm looking at right now
#
case $# in
    0)
	DIR=$(pwd)
	set -- "${DIR##*/}"
	;;
esac

for dir in "$@"
do
    # remove any trailing / added by tab-completion
    dir=${dir%%/}
    if [ -d "${BDIR}/${dir}" ]; then
	if [ -z "$QUIET" ]; then
	    if [ -f "${PDIR}/${dir}/pkginfo" ]
	    then
		echo "Checking $dir (installed)"
	    else
		echo "Checking $dir (not installed)"
	    fi
	fi
	if [ -f "${BDIR}/${dir}/depend.${ARCH}" ]; then
	    while read -r deptype pkg
	    do
		if [ -f "${PDIR}/${pkg}/pkginfo" ]
		then
		    case $deptype in
			I)
			    if [ -z "$QUIET" ]; then
				echo " **ERROR** runtime $pkg .. incompatible"
			    fi
			    STATUS=1
			    ;;
			P)
			    if [ -z "$QUIET" ]; then
				echo "  runtime $pkg .. ok"
			    fi
			    ;;
			*)
			    echo "ERROR: invalid dependency $deptype"
			    ;;
			esac
		else
		    case $deptype in
			P)
			    if [ -z "$QUIET" ]; then
				echo " **ERROR** runtime $pkg .. missing"
			    fi
			    STATUS=1
			    ;;
		    esac
		fi
	    done < "${BDIR}/${dir}/depend.${ARCH}"
	elif [ -f "${BDIR}/${dir}/depend" ]; then
	    while read -r deptype pkg
	    do
		if [ -f "${PDIR}/${pkg}/pkginfo" ]
		then
		    case $deptype in
			I)
			    if [ -z "$QUIET" ]; then
				echo " **ERROR** runtime $pkg .. incompatible"
			    fi
			    STATUS=1
			    ;;
			P)
			    if [ -z "$QUIET" ]; then
				echo "  runtime $pkg .. ok"
			    fi
			    ;;
			*)
			    echo "ERROR: invalid dependency $deptype"
			    ;;
			esac
		else
		    case $deptype in
			P)
			    if [ -z "$QUIET" ]; then
				echo " **ERROR** runtime $pkg .. missing"
			    fi
			    STATUS=1
			    ;;
		    esac
		fi
	    done < "${BDIR}/${dir}/depend"
	else
	    if [ -z "$QUIET" ]; then
		echo "  ... no dependencies to check"
	    fi
	fi
	if [ -f "${BDIR}/${dir}/build_require.${ARCH}" ]; then
	    for pkg in $(<"${BDIR}/${dir}/build_require.${ARCH}")
	    do
		if [ -f "${PDIR}/${pkg}/pkginfo" ]
		then
		    if [ -z "$QUIET" ]; then
			echo "  build $pkg .. ok"
		    fi
		else
		    if [ -z "$QUIET" ]; then
			echo "  **ERROR** build $pkg .. missing"
		    fi
		    STATUS=1
		fi
	    done
	elif [ -f "${BDIR}/${dir}/build_require" ]; then
	    for pkg in $(<"${BDIR}/${dir}/build_require")
	    do
		if [ -f "${PDIR}/${pkg}/pkginfo" ]
		then
		    if [ -z "$QUIET" ]; then
			echo "  build $pkg .. ok"
		    fi
		else
		    if [ -z "$QUIET" ]; then
			echo "  **ERROR** build $pkg .. missing"
		    fi
		    STATUS=1
		fi
	    done
	fi
	if [ -f "${BDIR}/${dir}/build_incompatible" ]; then
	    for pkg in $(<"${BDIR}/${dir}/build_incompatible")
	    do
		if [ -f "${PDIR}/${pkg}/pkginfo" ]
		then
		    if [ -z "$QUIET" ]; then
			echo "  **ERROR** incompatible build $pkg is installed"
		    fi
		    STATUS=1
		fi
	    done
	fi
    else
	if [ -z "$QUIET" ]; then
	    echo "No such package $dir"
	fi
	STATUS=1
    fi
done

exit $STATUS
