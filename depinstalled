#!/bin/sh
#
# checks to see if the claimed dependencies of a package
# are installed, and shows them
#
# also looks for build dependencies and incompatibilities
#
# with -q, prints nothing, exits 0 if they are, 1 if they aren't
#
# is unreliable on sparc where package names from opensxce are different
#

THOME=${THOME:-/packages/localsrc/Tribblix}
BDIR=${THOME}/build

QUIET=""
STATUS=0

if [ "X$1" = "X-q" ]; then
    QUIET="yes"
    shift
fi

for dir in $*
do
    # remove any trailing / added by tab-completion
    dir=${dir%%/}
    if [ -d ${BDIR}/${dir} ]; then
	if [ -z "$QUIET" ]; then
	    if pkginfo -q $dir 2>/dev/null
	    then
		echo "Checking $dir (installed)"
	    else
		echo "Checking $dir (not installed)"
	    fi
	fi
	if [ -f ${BDIR}/${dir}/depend ]; then
	    for pkg in `awk '{print $2}' ${BDIR}/${dir}/depend`
	    do
		if pkginfo -q $pkg 2>/dev/null
		then
		    if [ -z "$QUIET" ]; then
			echo "  runtime $pkg .. ok"
		    fi
		else
		    if [ -z "$QUIET" ]; then
			echo " **ERROR** runtime $pkg .. missing"
		    fi
		    STATUS=1
		fi
	    done
	else
	    if [ -z "$QUIET" ]; then
		echo "  ... no dependencies to check"
	    fi
	fi
	if [ -f ${BDIR}/${dir}/build_require ]; then
	    for pkg in `cat ${BDIR}/${dir}/build_require`
	    do
		if pkginfo -q $pkg 2>/dev/null
		then
		    if [ -z "$QUIET" ]; then
			echo "  build $pkg .. ok"
		    fi
		else
		    if [ -z "$QUIET" ]; then
			echo " **ERROR** build $pkg .. missing"
		    fi
		    STATUS=1
		fi
	    done
	fi
	if [ -f ${BDIR}/${dir}/build_incompatible ]; then
	    for pkg in `cat ${BDIR}/${dir}/build_incompatible`
	    do
		if pkginfo -q $pkg 2>/dev/null
		then
		    if [ -z "$QUIET" ]; then
			echo "  **ERROR** incompatible build $pkg is installed"
		    fi
		    STATUS=1
		fi
	    done
	fi
    else
	if [ -z "$QUIET" ]; then
	    echo "No such package $dir"
	fi
	STATUS=1
    fi
done

exit $STATUS
