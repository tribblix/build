#!/bin/sh
#
# does all the appropriate updates and uploads files
# to the repo
#
# assumes the new packages are in the staging area (/tmp/pct)
#
# this is quite fragile
#

STAGE="/tmp/pct"
REPOHOST="pkgs.tribblix.org"
REPODIR="/var/repo"
QUICKMODE=""
PKGSKIP=""

REPO="tribblix-m29"
LREPODIR="${THOME}/pkgs"

ACREATE="create-aliases"
AFILE="aliases"
CCREATE="create-catalog"
CFILE="catalog"
HCREATE="create-catalog-html"
HFILE="index.html"
FCREATE="create-file-list"
FFILE="filelist.bz2"

#
# with -q avoid the aliases and the file list
# with many version updates they are unnecessary
#
# with -n just refresh the metadata, there are no packages
#
case $1 in
    -q)
	QUICKMODE="y"
	;;
    -n)
	PKGSKIP="y"
	;;
esac

if [ ! -d "$LREPODIR" ]; then
    echo "Cannot find local repo dir $LREPODIR"
    exit 1
fi

#
# sanity check
#
if [ ! -d "$THOME" ]; then
    echo "Cannot find my home"
    exit 1
fi
if [ ! -d "${THOME}/build" ]; then
    echo "Cannot find the build repo"
    exit 1
fi

#
# check for all the creation scripts
#
cd ${THOME}/build
if [ ! -f "$ACREATE" ]; then
    echo "Cannot find $ACREATE"
    exit 1
fi
if [ ! -f "$CCREATE" ]; then
    echo "Cannot find $CCREATE"
    exit 1
fi
if [ ! -f "$HCREATE" ]; then
    echo "Cannot find $HCREATE"
    exit 1
fi
if [ ! -f "$FCREATE" ]; then
    echo "Cannot find $FCREATE"
    exit 1
fi

if [ -z "$PKGSKIP" ]; then
#
# is there anything to upload?
#
if [ ! -d "$STAGE" ]; then
    echo "No staging area"
    exit 2
fi
FTOUPLOAD=`/bin/ls -1 ${STAGE}/*.zap 2>/dev/null`
if [ -z "$FTOUPLOAD" ]; then
    echo "Cannot find anything to upload"
    exit 2
fi

#
# the first thing we need to do is copy the files from the staging area
# to the local repo, because the metadata creation scripts rely on that
# they're copied now, deleted later
#
# exit if the pkg area already contains any matching files
# as that's almost always a mistake
#
cd $STAGE
for file in `/bin/ls -1 *.zap*`
do
    if [ -f "${LREPODIR}/${file}" ]; then
	echo "ERROR: preexisting file in repo ${LREPODIR}/${file}"
	exit 1
    fi
done
for file in `/bin/ls -1 *.zap*`
do
    /bin/cp ${file} ${LREPODIR}/${file}
done
#
# end of PKGSKIP
#
fi


#
# then we must create the metadata files
#
cd ${THOME}/build
# FIXME: only create aliases if necessary
if [ -z "$QUICKMODE" ]; then
    echo "Creating aliases"
    ./${ACREATE} > ${LREPODIR}/${AFILE}
fi
echo "Creating catalog"
./${CCREATE} > ${LREPODIR}/${CFILE}
echo "Creating html index"
./${HCREATE} > ${LREPODIR}/${HFILE}
if [ -z "$QUICKMODE" ]; then
    echo "Creating file list"
    ./${FCREATE} ${LREPODIR}
fi

#
# we upload all the relevant files from the staging area
# and delete them all once we're done
#
echo "Uploading files"
if [ -n "$PKGSKIP" ]; then
    scp ${LREPODIR}/${AFILE} ${LREPODIR}/${HFILE} ${LREPODIR}/${FFILE} ${LREPODIR}/${CFILE} ${REPOHOST}:${REPODIR}/${REPO}
elif [ -z "$QUICKMODE" ]; then
    cd $STAGE
    scp *.zap *.zap.sig ${LREPODIR}/${AFILE} ${LREPODIR}/${HFILE} ${LREPODIR}/${FFILE} ${LREPODIR}/${CFILE} ${REPOHOST}:${REPODIR}/${REPO}
else
    cd $STAGE
    scp *.zap *.zap.sig ${LREPODIR}/${HFILE} ${LREPODIR}/${CFILE} ${REPOHOST}:${REPODIR}/${REPO}
fi
cd $THOME
/bin/rm -fr $STAGE
