#!/bin/sh
#
# SPDX-License-Identifier: CDDL-1.0
#
# {{{ CDDL HEADER
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source. A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# }}}
#
# Copyright 2024 Peter Tribble
#

#
# does all the appropriate updates and uploads files
# to the repo
#
# assumes the new packages are in the staging area (/tmp/pct)
#
# this is quite fragile
#

STAGE="/tmp/pct"
REPOHOST="pkgs.tribblix.org"
REPODIR="/var/repo"
QUICKMODE=""
PKGSKIP=""

REPO="tribblix-m35"
LREPODIR="${THOME}/pkgs"

ACREATE="create-aliases-from-catalog"
AFILE="aliases"
CCREATE="create-catalog"
CFILE="catalog"
HCREATE="create-index-from-catalog"
HFILE="index.html"
FCREATE="create-file-list"
FFILE="filelist.bz2"

bail() {
    echo "ERROR: $1"
    exit 1
}

#
# with -q avoid the the file list
# with many version updates it is unnecessary, and expensive
#
# with -n just refresh the metadata, there are no packages
#
case $1 in
    -q)
	QUICKMODE="y"
	;;
    -n)
	PKGSKIP="y"
	;;
esac

if [ ! -d "$LREPODIR" ]; then
    bail "Cannot find local repo dir $LREPODIR"
fi

#
# sanity check
#
if [ ! -d "$THOME" ]; then
    bail "Cannot find my home"
fi
if [ ! -d "${THOME}/build" ]; then
    bail "Cannot find the build repo"
fi

#
# check for all the creation scripts
#
cd "${THOME}/build" || bail "Cannot cd to build repo"
if [ ! -f "$ACREATE" ]; then
    bail "Cannot find $ACREATE"
fi
if [ ! -f "$CCREATE" ]; then
    bail "Cannot find $CCREATE"
fi
if [ ! -f "$HCREATE" ]; then
    bail "Cannot find $HCREATE"
fi
if [ ! -f "$FCREATE" ]; then
    bail "Cannot find $FCREATE"
fi

if [ -z "$PKGSKIP" ]; then
#
# is there anything to upload?
#
if [ ! -d "$STAGE" ]; then
    bail "No staging area"
fi
FTOUPLOAD=$(/bin/ls -1 ${STAGE}/*.zap 2>/dev/null)
if [ -z "$FTOUPLOAD" ]; then
    bail "Cannot find anything to upload"
fi

#
# the first thing we need to do is copy the files from the staging area
# to the local repo, because the metadata creation scripts rely on that
# they're copied now, deleted later
#
# exit if the pkg area already contains any matching files
# as that's almost always a mistake
#
cd $STAGE || bail "Cannot cd to staging area"
for file in $(/bin/ls -1 *.zap*)
do
    if [ -f "${LREPODIR}/${file}" ]; then
	bail "preexisting file in repo ${LREPODIR}/${file}"
    fi
done
for file in $(/bin/ls -1 *.zap*)
do
    /bin/cp "${file}" "${LREPODIR}/${file}"
done
#
# end of PKGSKIP
#
fi

#
# then we must create the metadata files
#
cd "${THOME}/build" || bail "Cannot cd to build repo"
echo "Creating catalog"
./${CCREATE} > "${LREPODIR}/${CFILE}"
echo "Creating html index"
./${HCREATE} "${LREPODIR}/${CFILE}" > "${LREPODIR}/${HFILE}"
echo "Creating aliases"
./${ACREATE} > "${LREPODIR}/${AFILE}"
if [ -z "$QUICKMODE" ]; then
    echo "Creating file list"
    ./${FCREATE} "${LREPODIR}"
fi

#
# we upload all the relevant files from the staging area
# and delete them all once we're done
#
echo "Uploading files"
if [ -n "$PKGSKIP" ]; then
    scp "${LREPODIR}/${AFILE}" "${LREPODIR}/${HFILE}" "${LREPODIR}/${FFILE}" "${LREPODIR}/${CFILE}" "${REPOHOST}:${REPODIR}/${REPO}"
elif [ -z "$QUICKMODE" ]; then
    cd $STAGE || bail "Cannot cd to staging area"
    scp ./*.zap ./*.zap.sig "${LREPODIR}/${AFILE}" "${LREPODIR}/${HFILE}" "${LREPODIR}/${FFILE}" "${LREPODIR}/${CFILE}" "${REPOHOST}:${REPODIR}/${REPO}"
else
    cd $STAGE || bail "Cannot cd to staging area"
    scp ./*.zap ./*.zap.sig "${LREPODIR}/${AFILE}" "${LREPODIR}/${HFILE}" "${LREPODIR}/${CFILE}" "${REPOHOST}:${REPODIR}/${REPO}"
fi
cd "$THOME" || bail "Cannot cd to build home"
/bin/rm -fr $STAGE
